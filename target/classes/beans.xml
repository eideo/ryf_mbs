<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
	xmlns:tx="http://www.springframework.org/schema/tx">
	
	<context:property-placeholder location="classpath:param.properties" />
	
	<bean id="refreshCache" class="com.rongyifu.mms.quartz.jobs.RefreshCacheJob"/>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
            	<!-- 缓存5分钟刷新一次 -->
	            <bean class="org.springframework.scheduling.quartz.CronTriggerBean">
	                    <property name="jobDetail">
	                        <bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	                            <property name="targetObject" ref="refreshCache" />
	                            <property name="targetMethod" value="refresh" />
	                        </bean>
	                    </property>
	                    <property name="cronExpression" value="0 0/5 * * * ?" />
	            </bean>
        	</list>
    	</property>
	</bean>
	
	<bean id="masterDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="${master_dburl}" />
		<property name="user" value="${master_dbusername}" />
		<property name="password" value="${master_dbpassword}" />
		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="60" />
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 --> 
		<property name="idleConnectionTestPeriod" value="60" />
		<!--初始化时获取连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 --> 
		<property name="initialPoolSize" value="10" />
		<!--连接池中保留的最小连接数。-->
		<property name="minPoolSize" value="10" />
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="600" />
		<!--定义所有连接测试都执行的测试语句 -->
		<property name="preferredTestQuery" value="select 0 from dual" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="10" />
		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts" value="30" />
		<!--两次连接中间隔时间，单位毫秒。Default: 1000 -->
		<property name="acquireRetryDelay" value="1000" />
		<!--当连接池用完时客户端调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException,如设为0则无限期等待。单位毫秒。Default: 0 -->
		<property name="checkoutTimeout" value="1000" />
		<property name="breakAfterAcquireFailure" value="false"/>
	</bean>
	
	<bean id="slaveDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="${slave_dburl}" />
		<property name="user" value="${slave_dbusername}" />
		<property name="password" value="${slave_dbpassword}" />
		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="60" />
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 --> 
		<property name="idleConnectionTestPeriod" value="60" />
		<!--初始化时获取连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 --> 
		<property name="initialPoolSize" value="10" />
		<!--连接池中保留的最小连接数。-->
		<property name="minPoolSize" value="10" />
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="600" />
		<!--定义所有连接测试都执行的测试语句 -->
		<property name="preferredTestQuery" value="select 0 from dual" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="10" />
		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts" value="30" />
		<!--两次连接中间隔时间，单位毫秒。Default: 1000 -->
		<property name="acquireRetryDelay" value="1000" />
		<!--当连接池用完时客户端调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException,如设为0则无限期等待。单位毫秒。Default: 0 -->
		<property name="checkoutTimeout" value="1000" />
		<property name="breakAfterAcquireFailure" value="false"/>
	</bean>

	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<bean id="dataSource" class="com.rongyifu.mms.db.datasource.CustomerRoutingDataSource">
		<!-- 这个targetDataSource是必须要注入的 -->
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="MASTER" value-ref="masterDataSource" />
				<entry key="SLAVE" value-ref="slaveDataSource" />
			</map>
		</property>
		<!-- 默认的数据源 -->
		<property name="defaultTargetDataSource" ref="masterDataSource" />
	</bean>
<!-- 	远程调用查pos当天交易数据接口配置文件 -->
	<import resource="rmi_client_context.xml"/>
</beans>